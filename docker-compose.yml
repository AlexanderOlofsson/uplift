services:

  frontend:
    build:
      context: ./frontend
    depends_on:
      - backend
    networks:
      - uplift_network
    ports:
      -  "80:80"

  backend:
    build: ./backend
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PGURI: ${PGURI}
      JWT_KEY: ${JWT_KEY}
      VITE_BASE_URL: ${VITE_BASE_URL}
    ports:
      - "3000:3000"
    networks:
      - uplift_network

  database:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./backend/Database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER}"
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - uplift_network

networks:
  uplift_network:
